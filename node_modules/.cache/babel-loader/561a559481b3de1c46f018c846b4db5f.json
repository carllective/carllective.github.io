{"ast":null,"code":"var L = require('leaflet');\n\nimport { mapState } from \"vuex\"; // var leafletMap = require('leaflet-map');\n\nexport default {\n  name: 'MeetsPage',\n  components: {},\n  watch: {\n    your_location: {\n      handler(e) {\n        // console.log(e);\n        if (e) {\n          this.getMyLocation();\n        }\n      },\n\n      deep: true\n    }\n  },\n  computed: { ...mapState([\"your_location\", \"lang\"])\n  },\n  methods: {\n    renderMap() {\n      return new Promise(res => {\n        if (this.your_location) {\n          this.centerLat = this.your_location.lat;\n          this.centerLong = this.your_location.lon;\n        }\n\n        this.map = L.map('map', {\n          center: [this.centerLat, this.centerLong],\n          zoom: this.your_location ? 10 : 4\n        });\n        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '<a href=\"https://carto.com/\" target=\"_blank\">&copy; CARTO</a> <a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\n        }).addTo(this.map);\n        res(this.map);\n      });\n    },\n\n    async getMeetsLocations() {\n      var meetsIcon = L.icon({\n        iconUrl: require('../assets/C_Map_Marker_Car_Meets.png'),\n        iconSize: [30, 42],\n        iconAnchor: [15, 42]\n      });\n      var meetsIconToday = L.icon({\n        iconUrl: require('../assets/C_Map_Marker_Car_Meets_TODAY.png'),\n        iconSize: [30, 42],\n        iconAnchor: [15, 42]\n      });\n      this.$meets.forEach(i => {\n        // Only place markers if they have latitude and longitudes\n        if (i.Lat && i.Long) {\n          if (i.Today) {\n            console.log(i, i.Today);\n          }\n\n          var marker = L.marker([i.Lat, i.Long], {\n            icon: i.Today ? meetsIconToday : meetsIcon\n          }).addTo(this.map).bindPopup(`${i.Today ? `<h3 style=\"color: red; text-align: center;\">TODAY!</h3>` : ``}<h3 style=\"color: black; margin: 0; text-align: center;\">${i.Name}</h3>\n          <p style=\"color: black; margin: 0; text-align: center;\">${i.Address}</p>\n          <p style=\"text-align: center;\"><a href=\"${i.url}\" >${this.lang === 'en' ? 'Read More' : 'Lire Plus'}</a></p>`, {\n            offset: L.point(0, -30)\n          });\n          marker.on(\"mouseover\", () => {\n            marker.openPopup();\n          }); // marker.on(\"mouseout\", () => {\n          //   marker.closePopup();\n          // })\n        }\n      });\n    },\n\n    async getMyLocation() {\n      if (this.your_location) {\n        this.map.setZoom(10);\n        this.map.panTo(new L.LatLng(this.your_location.lat, this.your_location.lon));\n        var myIcon = L.icon({\n          iconUrl: require('../assets/C_Map_Marker.png'),\n          iconSize: [38, 53],\n          iconAnchor: [19, 53]\n        });\n        var yourmarker = L.marker([this.your_location.lat, this.your_location.lon], {\n          icon: myIcon\n        }).addTo(this.map).bindPopup('<p style=\"color: black;\">Your Location</p>', {\n          offset: L.point(0, -40)\n        });\n        yourmarker.on(\"mouseover\", () => {\n          yourmarker.openPopup();\n        });\n        yourmarker.on(\"mouseout\", () => {\n          yourmarker.closePopup();\n        });\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      map: null,\n      centerLat: 56.1304,\n      centerLong: -106.3468\n    };\n  },\n\n  mounted() {\n    this.renderMap().then(() => Promise.all([this.getMeetsLocations(), this.getMyLocation()]));\n    window.scrollTo(0, 0);\n  }\n\n};","map":{"version":3,"mappings":"AAOA;;AACA,gC,CAEA;;AACA;EACAA,iBADA;EAEAC,cAFA;EAIAC;IACAC;MACAC;QACA;QACA;UACA;QACA;MACA,CANA;;MAOAC;IAPA;EADA,CAJA;EAeAC,YACA;EADA,CAfA;EAkBAC;IACAC;MACA;QACA;UACA;UACA;QACA;;QACA;UACAC,yCADA;UAEAC;QAFA;QAIAC;UAAAC;QAAA;QACAC;MACA,CAXA;IAaA,CAfA;;IAiBA;MAEA;QACAC,wDADA;QAEAC,kBAFA;QAGAC;MAHA;MAMA;QACAF,8DADA;QAEAC,kBAFA;QAGAC;MAHA;MAOA;QAEA;QACA;UAGA;YACAC;UACA;;UAEA;YAAAC;UAAA,mBACAC,SADA,CACA;AACA;AACA,uHAHA,EAGA;YAAAC;UAAA,CAHA;UAIAC;YACAA;UACA,CAFA,EAXA,CAcA;UACA;UACA;QACA;MACA,CArBA;IAsBA,CAtDA;;IAwDA;MACA;QACA;QACA;QAEA;UACAP,8CADA;UAEAC,kBAFA;UAGAC;QAHA;QAMA;UAAAE;QAAA,mBACAC,SADA,CACA,4CADA,EACA;UAAAC;QAAA,CADA;QAGAE;UACAA;QACA,CAFA;QAGAA;UACAA;QACA,CAFA;MAGA;IACA;;EA7EA,CAlBA;;EAiGAC;IACA;MACAC,SADA;MAEAC,kBAFA;MAGAC;IAHA;EAKA,CAvGA;;EAwGAC;IACA;IACAC;EACA;;AA3GA","names":["name","components","watch","your_location","handler","deep","computed","methods","renderMap","center","zoom","L","attribution","res","iconUrl","iconSize","iconAnchor","console","icon","bindPopup","offset","marker","yourmarker","data","map","centerLat","centerLong","mounted","window"],"sourceRoot":"src/components","sources":["MapPage.vue"],"sourcesContent":["<template>\n  <div id=\"map_page\">\n    <div id=\"map\"></div>\n  </div>\n</template>\n\n<script>\nvar L = require('leaflet');\nimport {mapState} from \"vuex\";\n\n// var leafletMap = require('leaflet-map');\nexport default {\n  name: 'MeetsPage',\n  components: {\n  },\n  watch: {\n    your_location: {\n      handler(e) {\n        // console.log(e);\n          if (e) {\n            this.getMyLocation();\n          }\n      },\n      deep:true\n    }\n  },\n  computed: {\n    ...mapState([\"your_location\", \"lang\"])\n  },\n  methods: {\n    renderMap() {\n      return new Promise((res) => {\n        if (this.your_location) {\n          this.centerLat = this.your_location.lat;\n          this.centerLong = this.your_location.lon;\n        }\n        this.map = L.map('map', {\n            center: [this.centerLat , this.centerLong],\n            zoom: this.your_location ? 10 : 4\n        });\n        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {attribution: '<a href=\"https://carto.com/\" target=\"_blank\">&copy; CARTO</a> <a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'}).addTo(this.map);\n        res(this.map);\n      })\n      \n    },\n\n    async getMeetsLocations() {\n\n      var meetsIcon = L.icon({\n          iconUrl: require('../assets/C_Map_Marker_Car_Meets.png'),\n          iconSize: [30, 42],\n          iconAnchor: [15, 42],\n      });\n\n       var meetsIconToday = L.icon({\n          iconUrl: require('../assets/C_Map_Marker_Car_Meets_TODAY.png'),\n          iconSize: [30, 42],\n          iconAnchor: [15, 42],\n      });\n\n\n      this.$meets.forEach((i => {\n\n        // Only place markers if they have latitude and longitudes\n        if (i.Lat && i.Long) {\n\n          \n          if (i.Today) {\n            console.log(i, i.Today);\n          }\n\n          var marker = L.marker([i.Lat, i.Long], {icon: i.Today ? meetsIconToday : meetsIcon}).addTo(this.map)\n          .bindPopup(`${i.Today ? `<h3 style=\"color: red; text-align: center;\">TODAY!</h3>` : ``}<h3 style=\"color: black; margin: 0; text-align: center;\">${i.Name}</h3>\n          <p style=\"color: black; margin: 0; text-align: center;\">${i.Address}</p>\n          <p style=\"text-align: center;\"><a href=\"${i.url}\" >${this.lang === 'en' ? 'Read More' : 'Lire Plus'}</a></p>`, {offset: L.point(0, -30)});\n          marker.on(\"mouseover\", () => {\n            marker.openPopup();\n          });\n          // marker.on(\"mouseout\", () => {\n          //   marker.closePopup();\n          // })\n        }\n      }))\n    },\n\n    async getMyLocation() {\n      if (this.your_location) {\n        this.map.setZoom(10);\n        this.map.panTo(new L.LatLng(this.your_location.lat, this.your_location.lon));\n\n        var myIcon = L.icon({\n          iconUrl: require('../assets/C_Map_Marker.png'),\n          iconSize: [38, 53],\n          iconAnchor: [19, 53],\n        });\n\n        var yourmarker = L.marker([this.your_location.lat, this.your_location.lon], {icon: myIcon}).addTo(this.map)\n        .bindPopup('<p style=\"color: black;\">Your Location</p>', {offset: L.point(0, -40)});\n\n        yourmarker.on(\"mouseover\", () => {\n          yourmarker.openPopup();\n        });\n        yourmarker.on(\"mouseout\", () => {\n          yourmarker.closePopup();\n        })\n      }\n    }\n  },\n  data() {\n    return {\n      map: null,\n      centerLat: 56.1304,\n      centerLong: -106.3468\n    }\n  },\n  mounted() {\n   this.renderMap().then(() => Promise.all([this.getMeetsLocations(), this.getMyLocation()]));\n   window.scrollTo(0, 0);\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../styles.scss\";\n#map {\n    min-height: 86vh;\n    z-index: 0;\n}\np {\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}