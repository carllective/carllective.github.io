{"ast":null,"code":"var axios = require('axios'); // import Vue from \"vue\";\n\n\nimport store from \"./store.js\";\nexport default new class Geo {\n  constructor() {}\n\n  async init() {\n    return new Promise(res => {\n      // Fetch your IP (Free unlimited API)\n      axios.get(\"https://api.bigdatacloud.net/data/client-ip\").then(ip => {\n        return ip.data.ipString;\n      }).then(fetched_ip => {\n        var check_if_location_data_is_valid = [];\n\n        if (store.state.your_location) {\n          check_if_location_data_is_valid = [typeof store.state.your_location.city === 'string', typeof store.state.your_location.state_code === 'string', typeof store.state.your_location.country === 'string'];\n        } // console.log(store.state.your_location.state);\n        // If cookie hasn't stored your location (ie. first time logging in),\n        // OR your IP address changes, \n        // OR the location data is gibbberish (can happen if I push changes and user ahsn't refreshed cookies),\n        // then request API call to fetch your location/\n        // I based this off of IP change because it's safe to say if your IP changes, there's possibility you changed location. Reduce API calls\n\n\n        if (!store.state.your_location || fetched_ip !== store.state.your_ip || check_if_location_data_is_valid.indexOf(false) > -1) {\n          // Store your IP\n          store.commit(\"setYourIp\", fetched_ip); // Fetch your Latitude and Longitude and Location\n\n          this.fetchLocation().then(location => {\n            res(location);\n            window.location.reload();\n          });\n        } else {\n          res(store.state.your_location);\n        }\n      });\n    });\n  }\n\n  fetchLocation() {\n    console.log(\"setting Location...\");\n    return new Promise(res => {\n      navigator.geolocation.getCurrentPosition(e => {\n        // Get your EXACT Location (\"Reverse Geocoding\"). Location based on IP alone was inaccurate when in public places.\n        axios.get(`https://api.geoapify.com/v1/geocode/reverse?lat=${e.coords.latitude}&lon=${e.coords.longitude}&apiKey=7f74dc1e41fd4ffaa8377ea7d95ce297`).then(location => {\n          console.log(\"making API call\"); // Set your location\n\n          store.commit(\"setYourLocation\", location.data.features[0].properties);\n          console.log(location.data.features[0].properties.state);\n          store.commit(\"setActiveProvince\", {\n            en: location.data.features[0].properties.state,\n            fr: location.data.features[0].properties.state\n          }); // Return promise.\n\n          res(location.data.features[0].properties);\n        }, error => {\n          console.log(error, \"Try again in a minute.\");\n        });\n      });\n    });\n  }\n\n  nearest(params) {\n    return new Promise(res => {\n      if (store.state.your_location) {\n        const options = {\n          method: 'GET',\n          url: `https://wft-geo-db.p.rapidapi.com/v1/geo/locations/${store.state.your_location.lat}${store.state.your_location.lon}/nearbyCities`,\n          params: params,\n          headers: {\n            'X-RapidAPI-Key': '6d50373928msh8ea7650abbc2053p1c1465jsn8d11a1823388',\n            'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com'\n          }\n        };\n        axios.request(options).then(function (response) {\n          res(response.data);\n        }).catch(function (error) {\n          console.log(\"Please set your location\", error);\n        });\n      } else {\n        res();\n      }\n    });\n  }\n\n}();","map":{"version":3,"names":["axios","require","store","Geo","constructor","init","Promise","res","get","then","ip","data","ipString","fetched_ip","check_if_location_data_is_valid","state","your_location","city","state_code","country","your_ip","indexOf","commit","fetchLocation","location","window","reload","console","log","navigator","geolocation","getCurrentPosition","e","coords","latitude","longitude","features","properties","en","fr","error","nearest","params","options","method","url","lat","lon","headers","request","response","catch"],"sources":["/Users/rebj/Sites/carllective.github.io/src/geo.js"],"sourcesContent":["\nvar axios = require('axios');\n// import Vue from \"vue\";\nimport store from \"./store.js\";\n\n\n\nexport default new class Geo {\n  constructor() {\n    \n    \n  }\n\n  async init() {\n    return new Promise((res) => {\n     \n      // Fetch your IP (Free unlimited API)\n      axios.get(\"https://api.bigdatacloud.net/data/client-ip\").then((ip) => {\n        return ip.data.ipString;\n      }).then((fetched_ip) => {\n\n        var check_if_location_data_is_valid = [];\n        if (store.state.your_location) {\n            check_if_location_data_is_valid = [\n            typeof store.state.your_location.city === 'string',\n            typeof store.state.your_location.state_code === 'string',\n            typeof store.state.your_location.country === 'string',\n          ]\n        }\n\n        // console.log(store.state.your_location.state);\n        // If cookie hasn't stored your location (ie. first time logging in),\n        // OR your IP address changes, \n        // OR the location data is gibbberish (can happen if I push changes and user ahsn't refreshed cookies),\n        // then request API call to fetch your location/\n        // I based this off of IP change because it's safe to say if your IP changes, there's possibility you changed location. Reduce API calls\n      if (!store.state.your_location || fetched_ip !== store.state.your_ip || check_if_location_data_is_valid.indexOf(false) > -1) {\n\n        // Store your IP\n        store.commit(\"setYourIp\", fetched_ip);\n\n        // Fetch your Latitude and Longitude and Location\n        this.fetchLocation().then((location) => {\n          res(location);\n          window.location.reload();\n        });\n        \n        }\n        else {\n          res(store.state.your_location);\n        }\n       })\n      })\n    }\n\n    fetchLocation() {\n      console.log(\"setting Location...\");\n\n      return new Promise((res) => {\n        navigator.geolocation.getCurrentPosition((e) => {\n        // Get your EXACT Location (\"Reverse Geocoding\"). Location based on IP alone was inaccurate when in public places.\n          axios.get(`https://api.geoapify.com/v1/geocode/reverse?lat=${e.coords.latitude}&lon=${e.coords.longitude}&apiKey=7f74dc1e41fd4ffaa8377ea7d95ce297`).then((location) => {\n          console.log(\"making API call\");\n          // Set your location\n          store.commit(\"setYourLocation\", location.data.features[0].properties);\n          console.log(location.data.features[0].properties.state)\n          store.commit(\"setActiveProvince\", {en: location.data.features[0].properties.state, fr: location.data.features[0].properties.state});\n          // Return promise.\n          res(location.data.features[0].properties);\n\n          }, (error) => {\n            console.log(error, \"Try again in a minute.\");\n          }) \n        })\n      })\n    }\n\n    nearest(params) {\n      \n     return new Promise((res) => {\n      if (store.state.your_location) {\n        const options = {\n          method: 'GET',\n          url: `https://wft-geo-db.p.rapidapi.com/v1/geo/locations/${store.state.your_location.lat}${store.state.your_location.lon}/nearbyCities`,\n          params: params,\n          headers: {\n            'X-RapidAPI-Key': '6d50373928msh8ea7650abbc2053p1c1465jsn8d11a1823388',\n            'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com'\n          }\n        };\n        axios.request(options).then(function (response) {\n          res(response.data)\n        }).catch(function (error) {\n          console.log(\"Please set your location\", error);\n        });\n      } else {\n        res();\n      }\n     })\n    }\n\n}\n"],"mappings":"AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB,C,CACA;;;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAIA,eAAe,IAAI,MAAMC,GAAN,CAAU;EAC3BC,WAAW,GAAG,CAGb;;EAES,MAAJC,IAAI,GAAG;IACX,OAAO,IAAIC,OAAJ,CAAaC,GAAD,IAAS;MAE1B;MACAP,KAAK,CAACQ,GAAN,CAAU,6CAAV,EAAyDC,IAAzD,CAA+DC,EAAD,IAAQ;QACpE,OAAOA,EAAE,CAACC,IAAH,CAAQC,QAAf;MACD,CAFD,EAEGH,IAFH,CAESI,UAAD,IAAgB;QAEtB,IAAIC,+BAA+B,GAAG,EAAtC;;QACA,IAAIZ,KAAK,CAACa,KAAN,CAAYC,aAAhB,EAA+B;UAC3BF,+BAA+B,GAAG,CAClC,OAAOZ,KAAK,CAACa,KAAN,CAAYC,aAAZ,CAA0BC,IAAjC,KAA0C,QADR,EAElC,OAAOf,KAAK,CAACa,KAAN,CAAYC,aAAZ,CAA0BE,UAAjC,KAAgD,QAFd,EAGlC,OAAOhB,KAAK,CAACa,KAAN,CAAYC,aAAZ,CAA0BG,OAAjC,KAA6C,QAHX,CAAlC;QAKH,CATqB,CAWtB;QACA;QACA;QACA;QACA;QACA;;;QACF,IAAI,CAACjB,KAAK,CAACa,KAAN,CAAYC,aAAb,IAA8BH,UAAU,KAAKX,KAAK,CAACa,KAAN,CAAYK,OAAzD,IAAoEN,+BAA+B,CAACO,OAAhC,CAAwC,KAAxC,IAAiD,CAAC,CAA1H,EAA6H;UAE3H;UACAnB,KAAK,CAACoB,MAAN,CAAa,WAAb,EAA0BT,UAA1B,EAH2H,CAK3H;;UACA,KAAKU,aAAL,GAAqBd,IAArB,CAA2Be,QAAD,IAAc;YACtCjB,GAAG,CAACiB,QAAD,CAAH;YACAC,MAAM,CAACD,QAAP,CAAgBE,MAAhB;UACD,CAHD;QAKC,CAXH,MAYO;UACHnB,GAAG,CAACL,KAAK,CAACa,KAAN,CAAYC,aAAb,CAAH;QACD;MACD,CAlCF;IAmCC,CAtCI,CAAP;EAuCC;;EAEDO,aAAa,GAAG;IACdI,OAAO,CAACC,GAAR,CAAY,qBAAZ;IAEA,OAAO,IAAItB,OAAJ,CAAaC,GAAD,IAAS;MAC1BsB,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,CAAD,IAAO;QAChD;QACEhC,KAAK,CAACQ,GAAN,CAAW,mDAAkDwB,CAAC,CAACC,MAAF,CAASC,QAAS,QAAOF,CAAC,CAACC,MAAF,CAASE,SAAU,0CAAzG,EAAoJ1B,IAApJ,CAA0Je,QAAD,IAAc;UACvKG,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADuK,CAEvK;;UACA1B,KAAK,CAACoB,MAAN,CAAa,iBAAb,EAAgCE,QAAQ,CAACb,IAAT,CAAcyB,QAAd,CAAuB,CAAvB,EAA0BC,UAA1D;UACAV,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACb,IAAT,CAAcyB,QAAd,CAAuB,CAAvB,EAA0BC,UAA1B,CAAqCtB,KAAjD;UACAb,KAAK,CAACoB,MAAN,CAAa,mBAAb,EAAkC;YAACgB,EAAE,EAAEd,QAAQ,CAACb,IAAT,CAAcyB,QAAd,CAAuB,CAAvB,EAA0BC,UAA1B,CAAqCtB,KAA1C;YAAiDwB,EAAE,EAAEf,QAAQ,CAACb,IAAT,CAAcyB,QAAd,CAAuB,CAAvB,EAA0BC,UAA1B,CAAqCtB;UAA1F,CAAlC,EALuK,CAMvK;;UACAR,GAAG,CAACiB,QAAQ,CAACb,IAAT,CAAcyB,QAAd,CAAuB,CAAvB,EAA0BC,UAA3B,CAAH;QAEC,CATD,EASIG,KAAD,IAAW;UACZb,OAAO,CAACC,GAAR,CAAYY,KAAZ,EAAmB,wBAAnB;QACD,CAXD;MAYD,CAdD;IAeD,CAhBM,CAAP;EAiBD;;EAEDC,OAAO,CAACC,MAAD,EAAS;IAEf,OAAO,IAAIpC,OAAJ,CAAaC,GAAD,IAAS;MAC3B,IAAIL,KAAK,CAACa,KAAN,CAAYC,aAAhB,EAA+B;QAC7B,MAAM2B,OAAO,GAAG;UACdC,MAAM,EAAE,KADM;UAEdC,GAAG,EAAG,sDAAqD3C,KAAK,CAACa,KAAN,CAAYC,aAAZ,CAA0B8B,GAAI,GAAE5C,KAAK,CAACa,KAAN,CAAYC,aAAZ,CAA0B+B,GAAI,eAF3G;UAGdL,MAAM,EAAEA,MAHM;UAIdM,OAAO,EAAE;YACP,kBAAkB,oDADX;YAEP,mBAAmB;UAFZ;QAJK,CAAhB;QASAhD,KAAK,CAACiD,OAAN,CAAcN,OAAd,EAAuBlC,IAAvB,CAA4B,UAAUyC,QAAV,EAAoB;UAC9C3C,GAAG,CAAC2C,QAAQ,CAACvC,IAAV,CAAH;QACD,CAFD,EAEGwC,KAFH,CAES,UAAUX,KAAV,EAAiB;UACxBb,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCY,KAAxC;QACD,CAJD;MAKD,CAfD,MAeO;QACLjC,GAAG;MACJ;IACD,CAnBM,CAAP;EAoBA;;AA5FwB,CAAd,EAAf"},"metadata":{},"sourceType":"module"}