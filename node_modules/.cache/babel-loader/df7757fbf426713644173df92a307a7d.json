{"ast":null,"code":"function rad2degr(rad) {\n  return rad * 180 / Math.PI;\n}\n\nfunction degr2rad(degr) {\n  return degr * Math.PI / 180;\n}\n\nfunction getCenter(latLngInDegr) {\n  if (latLngInDegr && latLngInDegr.length && latLngInDegr.length > 1) {\n    let LATIDX = 0;\n    let LNGIDX = 1;\n    let sumX = 0;\n    let sumY = 0;\n    let sumZ = 0;\n    let meters = 0;\n\n    for (var i = 0; i < latLngInDegr.length; i++) {\n      let lat = degr2rad(latLngInDegr[i][LATIDX]);\n      let lng = degr2rad(latLngInDegr[i][LNGIDX]); // sum of cartesian coordinates\n\n      sumX += Math.cos(lat) * Math.cos(lng);\n      sumY += Math.cos(lat) * Math.sin(lng);\n      sumZ += Math.sin(lat);\n\n      if (i < latLngInDegr.length - 1) {\n        let dist = distance(latLngInDegr[i][LATIDX], latLngInDegr[i][LNGIDX], latLngInDegr[i + 1][LATIDX], latLngInDegr[i + 1][LNGIDX]);\n        if (dist > meters) meters = dist;\n      }\n    }\n\n    meters *= 1000;\n    var zoomfactor = 1;\n    if (meters < 1128) zoomfactor = 15;else if (meters > 1128 && meters <= 2256) zoomfactor = 14;else if (meters > 2256 && meters <= 4513) zoomfactor = 13;else if (meters > 4513 && meters <= 9027) zoomfactor = 12;else if (meters > 9027 && meters <= 18055) zoomfactor = 11;else if (meters > 18055 && meters <= 36111) zoomfactor = 10;else if (meters > 36111 && meters <= 72223) zoomfactor = 9;else if (meters > 72223 && meters <= 144447) zoomfactor = 8;else if (meters > 144447 && meters <= 288895) zoomfactor = 7;else if (meters > 288895 && meters <= 577790) zoomfactor = 6;else if (meters > 577790 && meters <= 1155581) zoomfactor = 5;else if (meters > 1155581 && meters <= 2311162) zoomfactor = 4;else if (meters > 2311162 && meters <= 4622324) zoomfactor = 3;else if (meters > 4622324 && meters <= 9244649) zoomfactor = 2;else if (meters > 9244649) zoomfactor = 1;\n    let avgX = sumX / latLngInDegr.length;\n    let avgY = sumY / latLngInDegr.length;\n    let avgZ = sumZ / latLngInDegr.length; // convert average x, y, z coordinate to latitude and longtitude\n\n    let lng = Math.atan2(avgY, avgX);\n    let hyp = Math.sqrt(avgX * avgX + avgY * avgY);\n    let lat = Math.atan2(avgZ, hyp);\n    return {\n      lat: rad2degr(lat),\n      lng: rad2degr(lng),\n      zoom: zoomfactor\n    };\n  } else {\n    return \"Provide at least two coordinates please.\";\n  }\n}\n\nfunction distance(lat1, lon1, lat2, lon2) {\n  var p = 0.017453292519943295; // Math.PI / 180\n\n  var c = Math.cos;\n  var a = 0.5 - c((lat2 - lat1) * p) / 2 + c(lat1 * p) * c(lat2 * p) * (1 - c((lon2 - lon1) * p)) / 2;\n  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n}\n\nfunction getDistance(arr1, arr2) {\n  if (arr1 && arr2) {\n    var p = 0.017453292519943295; // Math.PI / 180\n\n    var c = Math.cos;\n    var a = 0.5 - c((arr2[0] - arr1[0]) * p) / 2 + c(arr1[0] * p) * c(arr2[0] * p) * (1 - c((arr2[1] - arr1[1]) * p)) / 2;\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n  } else {\n    return \"Provide two sets of coordinates please.\";\n  }\n}\n\nlet latlng = {\n  latLngCenter: getCenter,\n  latLngDistance: getDistance,\n  getCenter,\n  getDistance\n};\nmodule.exports = latlng;","map":{"version":3,"names":["rad2degr","rad","Math","PI","degr2rad","degr","getCenter","latLngInDegr","length","LATIDX","LNGIDX","sumX","sumY","sumZ","meters","i","lat","lng","cos","sin","dist","distance","zoomfactor","avgX","avgY","avgZ","atan2","hyp","sqrt","zoom","lat1","lon1","lat2","lon2","p","c","a","asin","getDistance","arr1","arr2","latlng","latLngCenter","latLngDistance","module","exports"],"sources":["/Users/rebj/Sites/carllective.github.io/node_modules/latitude-longitude/index.js"],"sourcesContent":["function rad2degr(rad) { return rad * 180 / Math.PI; }\r\nfunction degr2rad(degr) { return degr * Math.PI / 180; }\r\n\r\nfunction getCenter(latLngInDegr) {\r\n    if (latLngInDegr && latLngInDegr.length && latLngInDegr.length > 1) {\r\n        let LATIDX = 0;\r\n        let LNGIDX = 1;\r\n        let sumX = 0;\r\n        let sumY = 0;\r\n        let sumZ = 0;\r\n        let meters = 0;\r\n\r\n        for (var i = 0; i < latLngInDegr.length; i++) {\r\n            let lat = degr2rad(latLngInDegr[i][LATIDX]);\r\n            let lng = degr2rad(latLngInDegr[i][LNGIDX]);\r\n            // sum of cartesian coordinates\r\n            sumX += Math.cos(lat) * Math.cos(lng);\r\n            sumY += Math.cos(lat) * Math.sin(lng);\r\n            sumZ += Math.sin(lat);\r\n            if (i < latLngInDegr.length - 1) {\r\n                let dist = distance(latLngInDegr[i][LATIDX], latLngInDegr[i][LNGIDX], latLngInDegr[i + 1][LATIDX], latLngInDegr[i + 1][LNGIDX])\r\n                if (dist > meters) meters = dist\r\n            }\r\n        }\r\n\r\n        meters *= 1000\r\n        var zoomfactor = 1;\r\n        if (meters < 1128) zoomfactor = 15\r\n        else if ((meters > 1128) && (meters <= 2256)) zoomfactor = 14\r\n        else if ((meters > 2256) && (meters <= 4513)) zoomfactor = 13\r\n        else if ((meters > 4513) && (meters <= 9027)) zoomfactor = 12\r\n        else if ((meters > 9027) && (meters <= 18055)) zoomfactor = 11\r\n        else if ((meters > 18055) && (meters <= 36111)) zoomfactor = 10\r\n        else if ((meters > 36111) && (meters <= 72223)) zoomfactor = 9\r\n        else if ((meters > 72223) && (meters <= 144447)) zoomfactor = 8\r\n        else if ((meters > 144447) && (meters <= 288895)) zoomfactor = 7\r\n        else if ((meters > 288895) && (meters <= 577790)) zoomfactor = 6\r\n        else if ((meters > 577790) && (meters <= 1155581)) zoomfactor = 5\r\n        else if ((meters > 1155581) && (meters <= 2311162)) zoomfactor = 4\r\n        else if ((meters > 2311162) && (meters <= 4622324)) zoomfactor = 3\r\n        else if ((meters > 4622324) && (meters <= 9244649)) zoomfactor = 2\r\n        else if (meters > 9244649) zoomfactor = 1\r\n\r\n        let avgX = sumX / latLngInDegr.length;\r\n        let avgY = sumY / latLngInDegr.length;\r\n        let avgZ = sumZ / latLngInDegr.length;\r\n\r\n        // convert average x, y, z coordinate to latitude and longtitude\r\n        let lng = Math.atan2(avgY, avgX);\r\n        let hyp = Math.sqrt(avgX * avgX + avgY * avgY);\r\n        let lat = Math.atan2(avgZ, hyp);\r\n\r\n        return ({\r\n            lat: rad2degr(lat),\r\n            lng: rad2degr(lng),\r\n            zoom: zoomfactor\r\n        });\r\n    } else {\r\n        return \"Provide at least two coordinates please.\"\r\n    }\r\n}\r\n\r\nfunction distance(lat1, lon1, lat2, lon2) {\r\n    var p = 0.017453292519943295;    // Math.PI / 180\r\n    var c = Math.cos;\r\n    var a = 0.5 - c((lat2 - lat1) * p) / 2 +\r\n        c(lat1 * p) * c(lat2 * p) *\r\n        (1 - c((lon2 - lon1) * p)) / 2;\r\n\r\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n}\r\n\r\nfunction getDistance(arr1, arr2) {\r\n    if (arr1 && arr2) {\r\n        var p = 0.017453292519943295;    // Math.PI / 180\r\n        var c = Math.cos;\r\n        var a = 0.5 - c((arr2[0] - arr1[0]) * p) / 2 +\r\n            c(arr1[0] * p) * c(arr2[0] * p) *\r\n            (1 - c((arr2[1] - arr1[1]) * p)) / 2;\r\n\r\n        return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n    } else {\r\n        return \"Provide two sets of coordinates please.\"\r\n    }\r\n}\r\n\r\nlet latlng = {\r\n    latLngCenter: getCenter,\r\n    latLngDistance: getDistance,\r\n    getCenter,\r\n    getDistance\r\n}\r\n\r\nmodule.exports = latlng"],"mappings":"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"},"metadata":{},"sourceType":"script"}