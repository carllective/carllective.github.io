{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport airtable from './airtable';\nimport geo from './geo';\nimport store from './store';\nimport router from './router';\nimport VueHead from 'vue-head';\nVue.use(VueHead);\nVue.config.productionTip = false;\n\nif (window.location.href.includes(\"fr.\")) {\n  store.commit(\"setLang\", \"fr\");\n} else {\n  store.commit(\"setLang\", \"en\");\n}\n\nstore.commit(\"setLoading\", true);\nsetTimeout(() => {\n  store.commit(\"setLoading\", false);\n}, 2000);\n\nfunction initVue() {\n  return new Promise(res => {\n    new Vue({\n      store,\n      router,\n      render: h => h(App)\n    }).$mount('#app');\n    res();\n  });\n}\n\nVue.prototype.$geoAPI = geo;\nVue.prototype.$geoAPI.init({\n  format: 'json'\n}).then(Promise.all([airtable.init_airtable(), airtable.init_airtable2()]).then(() => initVue()));","map":{"version":3,"names":["Vue","App","airtable","geo","store","router","VueHead","use","config","productionTip","window","location","href","includes","commit","setTimeout","initVue","Promise","res","render","h","$mount","prototype","$geoAPI","init","format","then","all","init_airtable","init_airtable2"],"sources":["/Users/rebj/Sites/carllective.github.io/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport airtable from './airtable';\nimport geo from './geo';\nimport store from './store';\nimport router from './router';\nimport VueHead from 'vue-head';\nVue.use(VueHead);\nVue.config.productionTip = false;\n\nif (window.location.href.includes(\"fr.\")) {\n  store.commit(\"setLang\", \"fr\");\n} else {\n  store.commit(\"setLang\", \"en\");\n}\n\nstore.commit(\"setLoading\", true);\nsetTimeout(() => {\n  store.commit(\"setLoading\", false);\n}, 2000);\n\nfunction initVue() {\n  return new Promise((res) => {\n  \n      new Vue({\n        store,\n        router,\n        render: h => h(App),\n      }).$mount('#app');\n      res();\n    })\n}\nVue.prototype.$geoAPI = geo;\nVue.prototype.$geoAPI.init({format: 'json'}).then((Promise.all([airtable.init_airtable(), airtable.init_airtable2()]).then(() => initVue())));\n\n  \n  \n\n\n\n"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACAN,GAAG,CAACO,GAAJ,CAAQD,OAAR;AACAN,GAAG,CAACQ,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;;AAEA,IAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;EACxCT,KAAK,CAACU,MAAN,CAAa,SAAb,EAAwB,IAAxB;AACD,CAFD,MAEO;EACLV,KAAK,CAACU,MAAN,CAAa,SAAb,EAAwB,IAAxB;AACD;;AAEDV,KAAK,CAACU,MAAN,CAAa,YAAb,EAA2B,IAA3B;AACAC,UAAU,CAAC,MAAM;EACfX,KAAK,CAACU,MAAN,CAAa,YAAb,EAA2B,KAA3B;AACD,CAFS,EAEP,IAFO,CAAV;;AAIA,SAASE,OAAT,GAAmB;EACjB,OAAO,IAAIC,OAAJ,CAAaC,GAAD,IAAS;IAExB,IAAIlB,GAAJ,CAAQ;MACNI,KADM;MAENC,MAFM;MAGNc,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACnB,GAAD;IAHR,CAAR,EAIGoB,MAJH,CAIU,MAJV;IAKAH,GAAG;EACJ,CARI,CAAP;AASD;;AACDlB,GAAG,CAACsB,SAAJ,CAAcC,OAAd,GAAwBpB,GAAxB;AACAH,GAAG,CAACsB,SAAJ,CAAcC,OAAd,CAAsBC,IAAtB,CAA2B;EAACC,MAAM,EAAE;AAAT,CAA3B,EAA6CC,IAA7C,CAAmDT,OAAO,CAACU,GAAR,CAAY,CAACzB,QAAQ,CAAC0B,aAAT,EAAD,EAA2B1B,QAAQ,CAAC2B,cAAT,EAA3B,CAAZ,EAAmEH,IAAnE,CAAwE,MAAMV,OAAO,EAArF,CAAnD"},"metadata":{},"sourceType":"module"}